<?php

class AetherServiceConfig extends AetherService
{
    public function register()
    {
        $this->registerAppConfig();

        $this->registerAetherConfig();
    }

    protected function registerAppConfig()
    {
        // Load the application config and bind it to the service locator, so
        // that we can easily access it anywhere in the code using the
        // `config()` helper function.
        $this->sl->set(
            'config',
            new AetherAppConfig($this->sl->get('projectRoot'))
        );
    }

    protected function registerAetherConfig()
    {
        $projectPath = $this->sl->get('projectRoot');

        if (!file_exists($configPath = $projectPath.'config/autogenerated.config.xml')) {
            $configPath = $projectPath.'config/aether.config.xml';
        }

        try {
            $aetherConfig = new AetherConfig($configPath);

            $aetherConfig->matchUrl(
                $this->sl->get('parsedUrl')
            );

            $this->sl->set('aetherConfig', $aetherConfig);
        } catch (AetherMissingFileException $e) {
            throw new Exception(
                'No configuration file for project found: '.$e->getMessage()
            );
        } catch (AetherNoUrlRuleMatchException $e) {
            throw new Exception(
                'No rule matched url in config file: '.$e->getMessage()
            );
        }
    }
}
